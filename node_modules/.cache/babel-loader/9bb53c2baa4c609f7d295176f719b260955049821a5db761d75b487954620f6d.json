{"ast":null,"code":"var _jsxFileName = \"/Users/shaynesoh/Github/projects/weather/src/contexts/apiContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\n\n// const WEATHER_API = 'd5c54a92b47f0f9c49fa254decc1ac92';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WEATHER_API = 'EZLG9SEBP724E777RBTYUX8JT';\nexport const apiContext = /*#__PURE__*/createContext();\nexport const ApiProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [location, setLocation] = useState('Singapore');\n  const [weather, setWeather] = useState('Singapore');\n\n  // const apiURL = `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${process.env.REACT_APP_WEATHER_API}`;\n  const apiURL = `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${location}?key=${WEATHER_API}`;\n\n  // fetch data on load\n  useEffect(() => {\n    axios.get(apiURL).then(response => {\n      setLocation(response.data);\n      console.log(response.data);\n    }).catch(error => {\n      console.log(error.message);\n    });\n  }, [location]); // runs api when location state changes\n\n  // const fetchWeather = async (event) => {\n  //   event.preventDefault();\n  //   const response = await axios.get(\n  //     `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${location}?key=${WEATHER_API}`,\n  //   );\n  //   setWeather(response.data);\n  // };\n\n  // const handleSubmit = (event) => {\n  //   event.preventDefault();\n  //   if (event.target.value) {\n  //     alert(\"Unable to fetch results, please enter a valid city name.\");\n  //     return;\n  //   }\n  //   axios.get(\n  //     `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${location}?key=${WEATHER_API}`\n  //   )\n  //     .then((response) => {\n  //       setLocation(response.data);\n  //       setWeather(response.data);\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n  // };\n\n  // const handlerChange = (event) => {\n  //   event.preventDefault();\n  //   setLocation(event.target.value);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(apiContext.Provider, {\n    value: [location, setLocation, weather, setWeather],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(ApiProvider, \"XAWpIaPrdOTqYkrVdMEhGFY/5Ho=\");\n_c = ApiProvider;\nexport default ApiProvider;\nvar _c;\n$RefreshReg$(_c, \"ApiProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","axios","WEATHER_API","apiContext","ApiProvider","children","location","setLocation","weather","setWeather","apiURL","get","then","response","data","console","log","catch","error","message"],"sources":["/Users/shaynesoh/Github/projects/weather/src/contexts/apiContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\n\n// const WEATHER_API = 'd5c54a92b47f0f9c49fa254decc1ac92';\nconst WEATHER_API = 'EZLG9SEBP724E777RBTYUX8JT';\n\nexport const apiContext = createContext();\nexport const ApiProvider = ({children}) => {\n\n  const [location, setLocation] = useState('Singapore');\n  const [weather, setWeather] = useState('Singapore');\n\n    // const apiURL = `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${process.env.REACT_APP_WEATHER_API}`;\n    const apiURL = `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${location}?key=${WEATHER_API}`;\n\n    // fetch data on load\n    useEffect(() => {\n      axios.get(apiURL)\n        .then((response) => {\n          setLocation(response.data);\n          console.log(response.data)\n        })\n        .catch((error) => {\n          console.log(error.message);\n        })\n    }, [location]); // runs api when location state changes\n\n    // const fetchWeather = async (event) => {\n    //   event.preventDefault();\n    //   const response = await axios.get(\n    //     `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${location}?key=${WEATHER_API}`,\n    //   );\n    //   setWeather(response.data);\n    // };\n\n    // const handleSubmit = (event) => {\n    //   event.preventDefault();\n    //   if (event.target.value) {\n    //     alert(\"Unable to fetch results, please enter a valid city name.\");\n    //     return;\n    //   }\n    //   axios.get(\n    //     `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${location}?key=${WEATHER_API}`\n    //   )\n    //     .then((response) => {\n    //       setLocation(response.data);\n    //       setWeather(response.data);\n    //     })\n    //     .catch((error) => {\n    //       console.log(error);\n    //     });\n    // };\n\n    // const handlerChange = (event) => {\n    //   event.preventDefault();\n    //   setLocation(event.target.value);\n    // };\n\n    return (\n        <apiContext.Provider value={[location, setLocation, weather, setWeather]}>\n          {children}\n        </apiContext.Provider>\n    )\n}\n\nexport default ApiProvider;"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA;AACA,MAAMC,WAAW,GAAG,2BAA2B;AAE/C,OAAO,MAAMC,UAAU,gBAAGL,aAAa,EAAE;AACzC,OAAO,MAAMM,WAAW,GAAG,QAAgB;EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC;EAEpC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,WAAW,CAAC;EACrD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,WAAW,CAAC;;EAEjD;EACA,MAAMW,MAAM,GAAI,uFAAsFJ,QAAS,QAAOJ,WAAY,EAAC;;EAEnI;EACAF,SAAS,CAAC,MAAM;IACdC,KAAK,CAACU,GAAG,CAACD,MAAM,CAAC,CACdE,IAAI,CAAEC,QAAQ,IAAK;MAClBN,WAAW,CAACM,QAAQ,CAACC,IAAI,CAAC;MAC1BC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACC,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAACC,OAAO,CAAC;IAC5B,CAAC,CAAC;EACN,CAAC,EAAE,CAACb,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhB;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,oBACI,QAAC,UAAU,CAAC,QAAQ;IAAC,KAAK,EAAE,CAACA,QAAQ,EAAEC,WAAW,EAAEC,OAAO,EAAEC,UAAU,CAAE;IAAA,UACtEJ;EAAQ;IAAA;IAAA;IAAA;EAAA,QACW;AAE9B,CAAC;AAAA,GAxDYD,WAAW;AAAA,KAAXA,WAAW;AA0DxB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}