{"ast":null,"code":"var _jsxFileName = \"/Users/shaynesoh/Github/projects/weather/src/contexts/apiContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WEATHER_API = 'd5c54a92b47f0f9c49fa254decc1ac92';\n// const WEATHER_API = 'EZLG9SEBP724E777RBTYUX8JT';\n\nexport const apiContext = /*#__PURE__*/createContext();\nexport const ApiProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [data, setData] = useState('Singapore');\n  const [location, setLocation] = useState('Singapore');\n  const apiURL = `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${process.env.REACT_APP_WEATHER_API}`;\n  // const apiURL = `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${location}?key=${process.env.REACT_APP_WEATHER_API}`;\n\n  useEffect(() => {\n    axios.get(apiURL).then(response => {\n      setData(response.data);\n      console.log(response.data);\n    }).catch(error => {\n      console.log(error.message);\n    });\n  }, [location]); // runs api when location state changes\n\n  const fetchWeather = event => {\n    event.preventDefault();\n    axios.get(apiURL).then(response => {\n      setLocation(response.data);\n      console.log(response.data);\n      console.log(location);\n    }).catch(error => {\n      console.log(error.message);\n    });\n  };\n  const handlerChange = event => {\n    event.preventDefault();\n    setLocation(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(apiContext.Provider, {\n    value: [data, location, setLocation],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(ApiProvider, \"YoOzTBtggjOQj65dLm8U43vPiBo=\");\n_c = ApiProvider;\nexport default ApiProvider;\nvar _c;\n$RefreshReg$(_c, \"ApiProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","axios","WEATHER_API","apiContext","ApiProvider","children","data","setData","location","setLocation","apiURL","process","env","REACT_APP_WEATHER_API","get","then","response","console","log","catch","error","message","fetchWeather","event","preventDefault","handlerChange","target","value"],"sources":["/Users/shaynesoh/Github/projects/weather/src/contexts/apiContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nconst WEATHER_API = 'd5c54a92b47f0f9c49fa254decc1ac92';\n// const WEATHER_API = 'EZLG9SEBP724E777RBTYUX8JT';\n\nexport const apiContext = createContext();\nexport const ApiProvider = ({children}) => {\n\n  const [data, setData] = useState('Singapore');\n  const [location, setLocation] = useState('Singapore');\n\n    const apiURL = `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${process.env.REACT_APP_WEATHER_API}`;\n    // const apiURL = `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${location}?key=${process.env.REACT_APP_WEATHER_API}`;\n\n    useEffect(() => {\n      axios.get(apiURL)\n        .then((response) => {\n          setData(response.data);\n          console.log(response.data)\n        })\n        .catch((error) => {\n          console.log(error.message);\n        })\n    }, [location]); // runs api when location state changes\n\n    const fetchWeather = (event) => {\n      event.preventDefault();\n      axios.get(apiURL)\n        .then((response) => {\n          setLocation(response.data);\n          console.log(response.data);\n          console.log(location);\n        })\n        .catch((error) => {\n          console.log(error.message)\n        });\n    }\n\n    const handlerChange = (event) => {\n      event.preventDefault();\n      setLocation(event.target.value);\n    };\n\n    return (\n        <apiContext.Provider value={[data, location, setLocation]}>\n          {children}\n        </apiContext.Provider>\n    )\n}\n\nexport default ApiProvider;"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,WAAW,GAAG,kCAAkC;AACtD;;AAEA,OAAO,MAAMC,UAAU,gBAAGL,aAAa,EAAE;AACzC,OAAO,MAAMM,WAAW,GAAG,QAAgB;EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC;EAEpC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,WAAW,CAAC;EAC7C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,WAAW,CAAC;EAEnD,MAAMW,MAAM,GAAI,qDAAoDF,QAAS,UAASG,OAAO,CAACC,GAAG,CAACC,qBAAsB,EAAC;EACzH;;EAEAb,SAAS,CAAC,MAAM;IACdC,KAAK,CAACa,GAAG,CAACJ,MAAM,CAAC,CACdK,IAAI,CAAEC,QAAQ,IAAK;MAClBT,OAAO,CAACS,QAAQ,CAACV,IAAI,CAAC;MACtBW,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACV,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDa,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAACC,OAAO,CAAC;IAC5B,CAAC,CAAC;EACN,CAAC,EAAE,CAACb,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhB,MAAMc,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,EAAE;IACtBvB,KAAK,CAACa,GAAG,CAACJ,MAAM,CAAC,CACdK,IAAI,CAAEC,QAAQ,IAAK;MAClBP,WAAW,CAACO,QAAQ,CAACV,IAAI,CAAC;MAC1BW,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACV,IAAI,CAAC;MAC1BW,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;IACvB,CAAC,CAAC,CACDW,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAACC,OAAO,CAAC;IAC5B,CAAC,CAAC;EACN,CAAC;EAED,MAAMI,aAAa,GAAIF,KAAK,IAAK;IAC/BA,KAAK,CAACC,cAAc,EAAE;IACtBf,WAAW,CAACc,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,oBACI,QAAC,UAAU,CAAC,QAAQ;IAAC,KAAK,EAAE,CAACrB,IAAI,EAAEE,QAAQ,EAAEC,WAAW,CAAE;IAAA,UACvDJ;EAAQ;IAAA;IAAA;IAAA;EAAA,QACW;AAE9B,CAAC;AAAA,GA1CYD,WAAW;AAAA,KAAXA,WAAW;AA4CxB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}